import { useContext, useEffect, useState } from "react";

import { NavBarContext } from "../hooks/NavBarContext";
import useScrollAtTop from "../hooks/useScrollAtTop";
import { createAssetsUrl } from "../libs/functions";

export const DropDownBtn = ({ label, phone, phoneButton, emailButton }) => {
  const { isNavOpen, togglePopUp, showDropdown, setShowDropdown } =
    useContext(NavBarContext);
  const atTop = useScrollAtTop();

  return (
    <div className="relative inline-block text-left">
      <button
        onClick={(e) => {
          e.stopPropagation();
          setShowDropdown(!showDropdown);
        }}
        className={`border-button ${
          atTop && !isNavOpen && "border-hoverPale bg-transparent !text-white"
        }`}
        id="menu-button"
        aria-expanded="true"
        aria-haspopup="true"
      >
        {label}
      </button>

      <div
        className={`absolute right-0 z-10 mt-2 w-56 origin-top-right rounded-md bg-white shadow-lg ring-1 ring-black ring-opacity-5 focus:outline-none  ${
          showDropdown ? "block" : "hidden"
        }`}
        role="menu"
        aria-orientation="vertical"
        aria-labelledby="menu-button"
        tabIndex="-1"
      >
        <div
          className="absolute w-6 h-3  bg-white -top-1 right-1 -z-10"
          style={{ clipPath: "polygon(50% 0%, 0% 100%, 100% 100%)" }}
        ></div>

        <div
          className="w-full flex justify-center items-center flex-col"
          role="none"
        >
          <a href={`tel:${phone}`} className="cursor-pointer w-full">
            <div className="py-4 flex gap-3 justify-center items-center hover:bg-hoverPale/20">
              <div className="mt-[6px]">
                <img
                  src={createAssetsUrl(phoneButton?.icon)}
                  alt="phone-icon"
                  className="w-[20px] h-[20px] mr-1"
                />
              </div>
              <p className="typo-body-2">{phoneButton?.label}</p>
            </div>
          </a>

          <div
            className="py-4 flex gap-3 justify-center items-center w-full hover:bg-hoverPale/20 cursor-pointer"
            onClick={() => {
              setShowDropdown(!showDropdown);
              togglePopUp();
            }}
          >
            <div className="mt-[3px] -translate-x-1">
              <img
                src={createAssetsUrl(emailButton?.icon)}
                alt="email-icon"
                className="w-[21px] h-[21px]"
              />
            </div>
            <p className="typo-body-2">{emailButton?.label}</p>
          </div>
        </div>
      </div>
    </div>
  );
};

const PhoneIcon = () => {
  return (
    <svg
      xmlns="http://www.w3.org/2000/svg"
      width="20"
      height="20"
      viewBox="0 0 20 20"
      fill="none"
    >
      <path
        fillRule="evenodd"
        clipRule="evenodd"
        d="M10.8908 4.84115C10.9789 4.38943 11.4166 4.09468 11.8683 4.18281C12.845 4.37338 13.7427 4.85107 14.4463 5.55475C15.15 6.25843 15.6277 7.15608 15.8183 8.13281C15.9064 8.58453 15.6117 9.02217 15.1599 9.1103C14.7082 9.19843 14.2706 8.90369 14.1825 8.45197C14.0554 7.80081 13.737 7.20238 13.2678 6.73326C12.7987 6.26414 12.2003 5.94568 11.5491 5.81864C11.0974 5.7305 10.8027 5.29287 10.8908 4.84115Z"
        fill="#635956"
      />
      <path
        fillRule="evenodd"
        clipRule="evenodd"
        d="M10.8805 1.57538C10.9313 1.11796 11.3433 0.788337 11.8007 0.839153C13.6797 1.04789 15.4318 1.88931 16.7695 3.22527C18.1071 4.56123 18.9507 6.31231 19.1618 8.191C19.2132 8.64836 18.8841 9.06079 18.4268 9.11218C17.9694 9.16357 17.557 8.83447 17.5056 8.37711C17.3367 6.87415 16.6618 5.47329 15.5917 4.40452C14.5216 3.33576 13.1199 2.66262 11.6167 2.49563C11.1593 2.44481 10.8296 2.0328 10.8805 1.57538Z"
        fill="#635956"
      />
      <path
        fillRule="evenodd"
        clipRule="evenodd"
        d="M5.28195 14.7942C3.25369 12.7659 1.77884 10.2401 0.995016 7.48243C0.872092 7.04992 0.776771 6.71453 0.775401 6.25462C0.773836 5.72897 0.945093 5.07044 1.20253 4.61215C1.64527 3.82401 2.59591 2.81397 3.41701 2.39866C4.12646 2.03982 4.96429 2.03982 5.67374 2.39866C6.37012 2.75088 7.16893 3.56622 7.59303 4.21851C8.13177 5.04712 8.13177 6.11535 7.59303 6.94396C7.44866 7.166 7.24289 7.37143 7.004 7.60991C6.92962 7.68417 6.84774 7.73782 6.90212 7.85106C7.44197 8.97546 8.17821 10.0301 9.11211 10.964C10.046 11.8979 11.1007 12.6342 12.2251 13.174C12.3415 13.2299 12.3892 13.1493 12.4662 13.0721C12.7047 12.8332 12.9101 12.6275 13.1322 12.4831C13.9608 11.9444 15.029 11.9444 15.8576 12.4831C16.5099 12.9072 17.3253 13.706 17.6775 14.4024C18.0363 15.1118 18.0363 15.9497 17.6775 16.6591C17.2653 17.4741 16.2635 18.4245 15.464 18.8736C15.0057 19.131 14.3472 19.3023 13.8215 19.3007C13.3616 19.2994 13.0262 19.204 12.5937 19.0811C9.83602 18.2974 7.31018 16.8224 5.28195 14.7942Z"
        fill="#635956"
      />
    </svg>
  );
};

const EmailIcon = () => {
  return (
    <svg
      xmlns="http://www.w3.org/2000/svg"
      width="20"
      height="19"
      viewBox="0 0 20 19"
      fill="none"
    >
      <path
        d="M10.571 0.804429C10.1952 0.716232 9.80414 0.716232 9.42839 0.804429C8.99917 0.905177 8.61765 1.15391 8.18356 1.43692C6.30989 2.65485 4.43421 3.86976 2.56162 5.08938C2.27707 5.27472 2.13479 5.36738 2.08522 5.48514C2.04191 5.58801 2.04171 5.7041 2.08466 5.80713C2.13382 5.92505 2.27586 6.01826 2.55992 6.20468L8.99384 10.4269C9.57693 10.8096 9.69938 10.8756 9.80786 10.9012C9.93402 10.9311 10.0654 10.9311 10.1916 10.9012C10.3 10.8756 10.4225 10.8096 11.0056 10.4269L17.4395 6.20471C17.7235 6.01829 17.8656 5.92508 17.9147 5.80715C17.9577 5.70413 17.9575 5.58803 17.9142 5.48516C17.8646 5.36741 17.7223 5.27474 17.4378 5.0894C15.5652 3.86978 13.6895 2.65482 11.8158 1.43692C11.3817 1.15392 11.0002 0.905178 10.571 0.804429Z"
        fill="#635956"
      />
      <path
        d="M19.1635 8.30019C19.1631 7.89957 19.163 7.69927 19.0791 7.58805C19.0061 7.49115 18.8944 7.43091 18.7733 7.42309C18.6343 7.41412 18.4665 7.52418 18.1311 7.74432L14.2657 10.281C14.0193 10.4427 13.8961 10.5235 13.8461 10.6296C13.8022 10.7225 13.7942 10.8284 13.8236 10.9269C13.8572 11.0393 13.9669 11.1377 14.1862 11.3345L18.6879 15.3745C18.8531 15.5228 19.1114 15.4316 19.1295 15.2103C19.1664 14.7593 19.1664 14.2057 19.1663 13.5349C19.1663 12.1138 19.1646 9.74251 19.1635 8.30019Z"
        fill="#635956"
      />
      <path
        d="M17.785 17.7025C17.9374 17.5924 18.0136 17.5373 18.0591 17.4325C18.0944 17.3512 18.1011 17.2264 18.0745 17.1418C18.0403 17.0327 17.9556 16.9567 17.7862 16.8047L12.3428 11.9196C12.3393 11.9165 12.3376 11.9149 12.336 11.9135C12.1963 11.7907 11.9922 11.7753 11.8357 11.8758C11.8339 11.877 11.8319 11.8783 11.828 11.8808C11.3914 12.1683 11.0076 12.4208 10.5753 12.5231C10.1968 12.6127 9.80264 12.6127 9.42416 12.5231C8.99178 12.4208 8.60803 12.1682 8.17136 11.8808C8.16737 11.8782 8.16538 11.8769 8.16359 11.8757C8.00712 11.7753 7.80301 11.7906 7.66335 11.9134C7.66175 11.9148 7.65997 11.9164 7.65643 11.9196L2.21305 16.8047C2.04368 16.9567 1.95899 17.0327 1.92478 17.1417C1.89824 17.2263 1.90485 17.3512 1.94017 17.4325C1.98569 17.5373 2.06188 17.5923 2.21426 17.7024C2.35277 17.8025 2.49938 17.8922 2.65304 17.9705C3.05749 18.1766 3.48807 18.2587 3.95649 18.297C4.40748 18.3338 4.96111 18.3338 5.6319 18.3338H14.3674C15.0382 18.3338 15.5919 18.3338 16.0429 18.297C16.5113 18.2587 16.9419 18.1766 17.3463 17.9705C17.4999 17.8922 17.6465 17.8025 17.785 17.7025Z"
        fill="#635956"
      />
      <path
        d="M0.869837 15.2103C0.887916 15.4316 1.14617 15.5227 1.3114 15.3744L5.81311 11.3344C6.03243 11.1376 6.14209 11.0392 6.1757 10.9268C6.20514 10.8283 6.19715 10.7225 6.15326 10.6295C6.10317 10.5234 5.97998 10.4426 5.7336 10.2809L1.86825 7.74428C1.5328 7.52414 1.36508 7.41407 1.22608 7.42305C1.10498 7.43087 0.993286 7.4911 0.920227 7.58801C0.836373 7.69922 0.836211 7.89953 0.835888 8.30014C0.834726 9.74247 0.833008 12.1137 0.833008 13.5349C0.832998 14.2057 0.832989 14.7593 0.869837 15.2103Z"
        fill="#635956"
      />
    </svg>
  );
};
